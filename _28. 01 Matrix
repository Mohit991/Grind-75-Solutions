# We can apply multisource BFS. 
# We will apply BFS from all the cells where we have 0. Wherever we have 0
# the answer there is also 0. 
# With multi source BFS, we will take all the values where we have 0s in queue. 
# Then we process them one by one. When we have processed all the 0 cells. 
# We will get ans for all the cells with 1 distance from 0 cells. 
# Next we will take all the cells with 1 distance and at the end of this 
# we will have all the cells with 2 distance. 
# This is how multi source BFS works!

class Solution:
    def updateMatrix(self, mat: List[List[int]]) -> List[List[int]]:
        rows, cols = len(mat), len(mat[0])
        q = []
        for i in range(rows):
            for j in range(cols):
                if mat[i][j] == 1:
                    mat[i][j] = inf
                else:
                    q.append((i, j))
                    
        while q:
            i, j = q.pop(0)
            if i-1 >= 0 and mat[i-1][j] == inf:
                mat[i-1][j] =  mat[i][j] + 1
                q.append((i-1, j))
            if i+1 < rows and mat[i+1][j] == inf:
                mat[i+1][j] = mat[i][j] + 1
                q.append((i+1, j))
            if j-1 >= 0 and mat[i][j-1] == inf:
                mat[i][j-1] = mat[i][j] + 1
                q.append((i, j-1))
            if j+1 < cols and mat[i][j+1] == inf:
                mat[i][j+1] = mat[i][j] + 1
                q.append((i, j+1))
        return mat
            
                
