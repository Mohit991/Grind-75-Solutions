class Solution:
    def addBinary(self, a: str, b: str) -> str:
        i, j = len(a)-1, len(b)-1
        carry = 0
        res = ''
        
        while i >= 0 and j >= 0:
            nums1, nums2 = a[i], b[j]
            i -= 1
            j -= 1
            if nums1 == '0' and nums2 == '0':
                if carry == 0:
                    res += '0'
                else:
                    res += '1'
                carry = 0
            elif (nums1 == '0' and nums2 == '1') or (nums1 == '1' and nums2 == '0'):
                if carry == 0:
                    carry = 0
                    res += '1'
                else:
                    res += '0'
                    carry = 1
            else:
                if carry == 1:
                    carry = 1
                    res += '1'
                else:
                    carry = 1
                    res += '0'
        
        while i >= 0 or j >= 0:
            num = ''
            if i >= 0:
                num = a[i]
                i -= 1
            else:
                num = b[j]
                j -= 1
            
            if num == '0' and carry == 0:
                carry = 0
                res += '0'
            elif (num == '1' and carry == 0) or (num == '0' and carry == 1):
                carry = 0
                res += '1'
            else:
                carry = 1
                res += '0'
                
            
        if carry == 1:
            res += '1'
        
        return res[::-1]
    
#######################################################################

class Solution:
    def addBinary(self, a: str, b: str) -> str:
        carry = 0
        i, j = len(a) - 1, len(b) - 1
        sum = ''
        
        while i >= 0 and j >= 0:
            n1 = int(a[i])
            n2 = int(b[j])
            resultBit = 0
            tempSum =  n1 + n2 + carry
            if tempSum == 0:
                carry = 0
                resultBit = 0
            elif tempSum == 1:
                carry = 0
                resultBit = 1
            elif tempSum == 2:
                carry = 1
                resultBit = 0
            elif tempSum == 3:
                carry = 1
                resultBit = 1
            
            sum += str(resultBit)
            i -= 1
            j -= 1

        while i >= 0:
            n1 = int(a[i])
            resultBit = 0
            tempSum =  n1 + carry
            
            if tempSum == 0:
                carry = 0
                resultBit = 0
            elif tempSum == 1:
                carry = 0
                resultBit = 1
            elif tempSum == 2:
                carry = 1
                resultBit = 0
            sum += str(resultBit)
            i -= 1
        
        while j >= 0:
            n1 = int(b[j])
            resultBit = 0
            tempSum =  n1 + carry
            
            if tempSum == 0:
                carry = 0
                resultBit = 0
            elif tempSum == 1:
                carry = 0
                resultBit = 1
            elif tempSum == 2:
                carry = 1
                resultBit = 0
            sum += str(resultBit)
            j -= 1
        
        if carry == 1:
            sum += '1'
            
        return sum[::-1]
            
