# We can do this question in two steps. 
# First step is to run a loop and find the correct place for our interval.
# Second step is to merge the intervals. 

# We have already done the problem of merge intervals, we can just use this solution and merge the intervals. 
# There is not need to sort the intervals as well. They are already sorted. 
class Solution:
    def mergeInterval(self, intervals):
        merged = [intervals[0]]
        for i in range(1, len(intervals)):
            currentInterval = intervals[i]
            prevInterval = merged[-1]
            if currentInterval[0] <= prevInterval[1]:
                merged[-1][1] = max(currentInterval[1], prevInterval[1])
            else:
                merged.append(currentInterval)
        return merged
    
    def insert(self, intervals: List[List[int]], newInterval: List[int]) -> List[List[int]]:
        if not intervals:
            return [newInterval]
        
        temp = []
        inserted = False
        for interval in intervals:
            if interval[0] >= newInterval[0]:
                temp.append(newInterval)
                inserted = True
            temp.append(interval)
        if not inserted: temp.append(newInterval)
            
        return self.mergeInterval(temp)
    
    
########################################################################

# ___: current interval(i); _ _ _: newInterval

# 1) i.end < newInterval.start，then we can safely add i to result;
# 	newInterval still needs to be compared with latter intervals

# 	|________|
# 			       |_ _ _ _ _|
			
# 2) i.start > newInterval.end，then we can safely add both to result，
# 	and mark newInterval as null
	
# 			       |________|
# 	|_ _ _ _ _|
			
# 3) There is overlap between i and newInterval. We can merge i into newInterval, 
# then use the updated newInterval to compare with latter intervals.

	
# 	|________|
# 		|_ _ _ _ _|
			
# 		|________|
# 	|_ _ _ _ _|
    
    
class Solution:
    def insert(self, intervals: List[List[int]], newInterval: List[int]) -> List[List[int]]:
        res = []
        newIntervalAdded = False
        
        for currentInterval in intervals:
            if newIntervalAdded or currentInterval[1] < newInterval[0]:
                res.append(currentInterval)
            elif currentInterval[0] > newInterval[1]:
                res.append(newInterval)
                res.append(currentInterval)
                newIntervalAdded = True
            else:
                newInterval[0] = min(newInterval[0], currentInterval[0])
                newInterval[1] = max(newInterval[1], currentInterval[1])
                
        if not newIntervalAdded:
            res.append(newInterval)
        return res
    
    
        
