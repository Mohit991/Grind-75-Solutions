# Take two stacks s1 and s2. 
# push: Append to s1
# pop: Pop from s2 if it has element, if not pop all elements from s1 and 
# append/push them onto s2, this will reverse the stack order and make it 
# queue. Finally pop from s2. 
# peek: same as pop but instead of popping from stack just peak. 
# empty: If both stacks are empty. 

class MyQueue:

    def __init__(self):
        self.s1, self.s2 = [], []

    def push(self, x: int) -> None:
        self.s1.append(x)

    def pop(self) -> int:
        if not self.s2:
            while self.s1:
                self.s2.append(self.s1.pop())
        return self.s2.pop()

    def peek(self) -> int:
        if not self.s2:
            while self.s1:
                self.s2.append(self.s1.pop())
        return self.s2[-1]

    def empty(self) -> bool:
        return not self.s1 and not self.s2


# Your MyQueue object will be instantiated and called as such:
# obj = MyQueue()
# obj.push(x)
# param_2 = obj.pop()
# param_3 = obj.peek()
# param_4 = obj.empty()
